---
type apiMovieDb = {
  adult: boolean;
  backdrop_path: string;
  id: number;
  title: string;
  original_language: string;
  original_title: string;
  overview: string;
  poster_path: string | null;
  media_type: "movie" | "all" | "tv" | "person";
  genre_ids: number[];
  popularity: number;
  release_date: string;
  video: boolean;
  vote_average: number;
  vote_count: number;
};

import TrendingCard from "../components/TrendingCard.astro";
import Hero from "../layouts/Hero.astro";
import Layout from "../layouts/Layout.astro";
import logoP from "/logoMovie.png";
import axios from "axios";
import { MovieTrendingCard } from "../components/MovieTrendingCard";

const api = axios.create({
  baseURL: import.meta.env.PUBLIC_MOVIEDB_API,
  headers: {
    "Content-Type": "application/json;charset=utf-8",
  },
  params: {
    api_key: import.meta.env.API_KEY,
  },
});

const {
  data: { results: trendingMovies },
} = await api("/trending/movie/day");
const { data } = await api("/genre/movie/list");
---

<Layout title="home">
  <Hero
    image={trendingMovies[0].backdrop_path}
    logo={logoP}
    genres={trendingMovies[0].genre_ids}
    content={trendingMovies[0].overview}
  />
  <main class="mx-4 lg:mx-[200px]">
    <section class="w-full px-4 mt-12">
      <h2 class="text-3xl font-title mb-7 uppercase">Blockbuster</h2>
      <ul class="grid grid-cols-[repeat(auto-fill,330px)] gap-2 w-full">
        {
          trendingMovies
            .filter((movie, index: number) => index <= 9)
            .map((movie: apiMovieDb, index: number) => (
              <MovieTrendingCard
                numberList={index + 1}
                titleMovie={movie.title}
                urlImage={movie.poster_path}
                views={movie.popularity}
              />
            ))
        }
      </ul>
    </section>
  </main>
</Layout>
